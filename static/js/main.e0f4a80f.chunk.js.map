{"version":3,"sources":["components/TodoTemplate.js","TodoContext.js","components/TodoHead.js","components/TodoItem.js","components/TodoList.js","components/TodoCreate.js","App.js","index.js"],"names":["TodoTemplateBlock","styled","div","TodoTemplate","children","todoReducer","state","action","type","concat","todo","map","id","done","filter","Error","TodoStateContext","createContext","TodoDispatchContext","TodoNextIdContext","TodoProvider","useReducer","window","localStorage","getItem","JSON","parse","text","dispatch","nextId","useRef","useEffect","setItem","stringify","Provider","value","useTodoState","context","useContext","useTodoDispatch","TodoHeadBlock","TodoHead","todos","remain","length","today","Date","dateStr","toLocaleDateString","year","month","day","dayName","weekday","className","Remove","TodoItemBlock","CheckCircle","props","css","Text","TodoItem","onClick","React","memo","TodoListBlock","TodoList","CircleButton","button","open","Input","input","InsertForm","form","InsertFormPositioner","TodoCreate","useState","setOpen","setValue","useTodoNextId","onSubmit","e","preventDefault","current","autoFocus","placeholder","onChange","target","curr","GlobalStyle","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0f4a80f.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst TodoTemplateBlock = styled.div`\n  max-width: 512px;\n  height: 768px;\n\n  position: relative;\n  background: white;\n  border-radius: 16px;\n  box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\n\n  margin: 0 auto;\n  margin-top: 32px;\n  margin-bottom: 64px;\n\n  display: flex;\n  flex-direction: column;\n`;\n\nconst TodoTemplate = ({ children }) => {\n  return <TodoTemplateBlock>{children}</TodoTemplateBlock>;\n};\n\nexport default TodoTemplate;\n","import React, {\n  useReducer,\n  createContext,\n  useContext,\n  useRef,\n  useEffect,\n} from \"react\";\n\nconst initialTodos = () =>\n  window.localStorage.getItem(\"Todo\")\n    ? JSON.parse(window.localStorage.getItem(\"Todo\"))\n    : [\n        {\n          id: 1,\n          text: `window.localStorage.getItem(\"Todo\")에 아무것도 없을 때 나오는 기본값`,\n          done: true,\n        },\n      ];\n\nconst todoReducer = (state, action) => {\n  switch (action.type) {\n    case \"CREATE\":\n      return state.concat(action.todo);\n    case \"TOGGLE\":\n      return state.map((todo) =>\n        todo.id === action.id ? { ...todo, done: !todo.done } : todo\n      );\n    case \"REMOVE\":\n      return state.filter((todo) => todo.id !== action.id);\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n};\n\nconst TodoStateContext = createContext();\nconst TodoDispatchContext = createContext();\nconst TodoNextIdContext = createContext();\n\nexport const TodoProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(todoReducer, initialTodos());\n  const nextId = useRef(5);\n\n  useEffect(() => {\n    window.localStorage.setItem(\"Todo\", JSON.stringify(state));\n  }, [state]);\n\n  return (\n    <TodoStateContext.Provider value={state}>\n      <TodoDispatchContext.Provider value={dispatch}>\n        <TodoNextIdContext.Provider value={nextId}>\n          {children}\n        </TodoNextIdContext.Provider>\n      </TodoDispatchContext.Provider>\n    </TodoStateContext.Provider>\n  );\n};\n\nexport const useTodoState = () => {\n  const context = useContext(TodoStateContext);\n  if (!context) {\n    throw new Error(\"Cannot find TodoProvider\");\n  }\n  return context;\n};\n\nexport const useTodoDispatch = () => {\n  const context = useContext(TodoDispatchContext);\n  if (!context) {\n    throw new Error(\"Cannot find TodoProvider\");\n  }\n  return context;\n};\n\nexport const useTodoNextId = () => {\n  const context = useContext(TodoNextIdContext);\n  if (!context) {\n    throw new Error(\"Cannot find TodoProvider\");\n  }\n  return context;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useTodoState } from \"../TodoContext\";\n\nconst TodoHeadBlock = styled.div`\n  padding: 48px 32px 24px 32px;\n  border-bottom: 1px solid #e9ecef;\n\n  h1 {\n    margin: 0;\n    font-size: 36px;\n    color: #343a40;\n  }\n\n  .day {\n    margin-top: 4px;\n    color: #868e96;\n    font-size: 21px;\n  }\n\n  .tasks-left {\n    margin-top: 40px;\n    color: #20c997;\n    font-size: 18px;\n    font-weight: bold;\n  }\n`;\n\nconst TodoHead = () => {\n  const todos = useTodoState();\n  const remain = todos.filter((todo) => !todo.done).length;\n\n  const today = new Date();\n  const dateStr = today.toLocaleDateString(\"ko-KR\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n  });\n  const dayName = today.toLocaleDateString(\"ko-KR\", { weekday: \"long\" });\n\n  return (\n    <TodoHeadBlock>\n      <h1>{dateStr}</h1>\n      <div className=\"day\">{dayName}</div>\n      <div className=\"tasks-left\">\n        {todos.length > 0\n          ? remain > 0\n            ? `할 일 ${remain}개 남음`\n            : `다 했어요!`\n          : `할 일이 없어요...`}\n      </div>\n    </TodoHeadBlock>\n  );\n};\n\nexport default TodoHead;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { MdDone, MdDelete } from \"react-icons/md\";\nimport { useTodoDispatch } from \"../TodoContext\";\n\nconst Remove = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #dee2e6;\n  font-size: 24px;\n  cursor: pointer;\n  &:hover {\n    color: #ff6b6b;\n  }\n`;\n\nconst TodoItemBlock = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 12px 0;\n`;\n\nconst CheckCircle = styled.div`\n  width: 32px;\n  height: 32px;\n  border-radius: 20px;\n  border: 1px solid #ced4da;\n\n  font-size: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 20px;\n  cursor: pointer;\n  ${(props) =>\n    props.done &&\n    css`\n      border: 1px solid #38d9a9;\n      color: #38d9a9;\n    `}\n`;\n\nconst Text = styled.div`\n  flex: 1;\n  font-size: 21px;\n  color: #495057;\n  ${(props) =>\n    props.done &&\n    css`\n      color: #ced4da;\n    `}\n`;\n\nconst TodoItem = ({ id, done, text }) => {\n  const dispatch = useTodoDispatch();\n\n  const onToggle = () => dispatch({ type: \"TOGGLE\", id });\n  const onRemove = () => dispatch({ type: \"REMOVE\", id });\n\n  return (\n    <TodoItemBlock>\n      <CheckCircle done={done} onClick={onToggle}>\n        {done && <MdDone />}\n      </CheckCircle>\n      <Text done={done}>{text}</Text>\n      <Remove onClick={onRemove}>\n        <MdDelete />\n      </Remove>\n    </TodoItemBlock>\n  );\n};\n\n// export default TodoItem;\nexport default React.memo(TodoItem);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport TodoItem from \"./TodoItem\";\nimport { useTodoState } from \"../TodoContext\";\n\nconst TodoListBlock = styled.div`\n  flex: 1;\n  padding: 20px 32px 48px 32px;\n  overflow-y: auto;\n`;\n\nconst TodoList = () => {\n  const todos = useTodoState();\n\n  return (\n    <TodoListBlock>\n      {todos.map((todo) => (\n        <TodoItem key={todo.id} {...todo} />\n      ))}\n    </TodoListBlock>\n  );\n};\n\nexport default TodoList;\n","import React, { useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { MdAdd } from \"react-icons/md\";\nimport { useTodoDispatch, useTodoNextId } from \"../TodoContext\";\n\nconst CircleButton = styled.button`\n  background: #38d9a9;\n  &:hover {\n    background: #63e6be;\n  }\n  &:active {\n    background: #20c997;\n  }\n\n  z-index: 5;\n  width: 80px;\n  height: 80px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 60px;\n\n  position: absolute;\n  left: 50%;\n  bottom: 0;\n  transform: translate(-50%, 50%);\n\n  color: white;\n  border-radius: 50%;\n  border: none;\n  outline: none;\n\n  transition: 0.125s all ease-in;\n  ${(props) =>\n    props.open &&\n    css`\n      background: #ff6b6b;\n      &:hover {\n        background: #ff8787;\n      }\n      &:active {\n        background: #fa5252;\n      }\n      transform: translate(-50%, 50%) rotate(45deg);\n    `}\n`;\n\nconst Input = styled.input`\n  padding: 12px;\n  border-radius: 4px;\n  border: 1px solid #dee2e6;\n\n  width: 100%;\n  outline: none;\n  font-size: 18px;\n  box-sizing: border-box;\n`;\n\nconst InsertForm = styled.form`\n  background: #f8f9fa;\n  padding: 32px 32px 72px 32px;\n\n  border-bottom-left-radius: 16px;\n  border-bottom-right-radius: 16px;\n\n  border-top: 1px solid #e9ecef;\n`;\n\nconst InsertFormPositioner = styled.div`\n  width: 100%;\n  bottom: 0;\n  left: 0;\n  position: absolute;\n`;\n\nconst TodoCreate = () => {\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const dispatch = useTodoDispatch();\n  const nextId = useTodoNextId();\n\n  const onToggle = () => setOpen((curr) => !curr);\n  const onChange = ({ target: { value } }) => setValue(value);\n  const onSubmit = (e) => {\n    e.preventDefault();\n    dispatch({\n      type: \"CREATE\",\n      todo: {\n        id: nextId.current,\n        text: value,\n        done: false,\n      },\n    });\n\n    setValue(\"\");\n    setOpen(false);\n    nextId.current += 1;\n  };\n\n  return (\n    <>\n      {open && (\n        <InsertFormPositioner>\n          <InsertForm onSubmit={onSubmit}>\n            <Input\n              autoFocus\n              placeholder=\"할 일 입력 후 Enter\"\n              value={value}\n              onChange={onChange}\n            />\n          </InsertForm>\n        </InsertFormPositioner>\n      )}\n      <CircleButton open={open} onClick={onToggle}>\n        <MdAdd />\n      </CircleButton>\n    </>\n  );\n};\n\n// export default TodoCreate;\nexport default React.memo(TodoCreate);\n","import React from \"react\";\nimport \"./App.css\";\nimport { createGlobalStyle } from \"styled-components\";\nimport TodoTemplate from \"./components/TodoTemplate\";\nimport TodoHead from \"./components/TodoHead\";\nimport TodoList from \"./components/TodoList\";\nimport TodoCreate from \"./components/TodoCreate\";\nimport { TodoProvider } from \"./TodoContext\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: #e9ecef;\n  }\n`;\n\nconst App = () => {\n  return (\n    <TodoProvider>\n      <GlobalStyle />\n      <TodoTemplate>\n        <TodoHead />\n        <TodoList />\n        <TodoCreate />\n      </TodoTemplate>\n    </TodoProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}